---
parameters:
  configPath: ""
  service: ""
  gcpKeyData: ""
  project: "labrink72"
  terragruntArtifactName: terragrunt
  infrastructureArtifactName: infrastructure
  deploy: false
  timeout: 90

steps:
  - pwsh: |
      $environmentPath = "$(Pipeline.Workspace)/${{ parameters.terragruntArtifactName }}/terragrunt/gcp/${{ parameters.project }}/${{ parameters.service }}"
      $configPath = "$(Pipeline.Workspace)/${{ parameters.configPath }}"

      New-Item `
        -Path $environmentPath `
        -ItemType Directory `
        -Force `
        -ErrorAction Stop | Out-Null

      Copy-Item `
        -Path $configPath `
        -Destination $environmentPath `
        -Force `
        -ErrorAction Stop
    displayName: Merge terragrunt configuration

  - ${{ if eq(parameters.deploy, false) }}:
      - pwsh: |
          $tempPath = [System.IO.Path]::GetTempPath()
          $keyPath = Join-Path -Path $tempPath -ChildPath "key.json"

          [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('${{ parameters.gcpKeyData }}')) > $keyPath
          $env:GOOGLE_APPLICATION_CREDENTIALS = $keyPath

          gcloud auth activate-service-account --quiet --key-file $keyPath

          $(Pipeline.Workspace)/${{ parameters.terragruntArtifactName }}/terragrunt/scripts/Deploy-GCPTerragruntConfig.ps1 -Service ${{ parameters.service }}
        displayName: Terragrunt plan

  - ${{ else }}:
      - pwsh: |
          $tempPath = [System.IO.Path]::GetTempPath()
          $keyPath = Join-Path -Path $tempPath -ChildPath "key.json"

          [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('${{ parameters.gcpKeyData }}')) > $keyPath
          $env:GOOGLE_APPLICATION_CREDENTIALS = $keyPath

          gcloud auth activate-service-account --quiet --key-file $keyPath

          $(Pipeline.Workspace)/${{ parameters.terragruntArtifactName }}/terragrunt/scripts/Deploy-GCPTerragruntConfig.ps1 -Service ${{ parameters.service }} -Apply
        displayName: Terragrunt apply

  - pwsh: |
      $tempPath = [System.IO.Path]::GetTempPath()
      $keyPath = Join-Path -Path $tempPath -ChildPath "key.json"
      Remove-Item -Path $keyPath -Force
    displayName: Cleanup
    condition: always()
