---
parameters:
  cloudType: ""
  service: ""
  gcpKeyData: ""
  apply: false
  timeout: 90

steps:
  # # TODO: Clean this up.
  # # - Break it in to separate installer scripts
  # # - Set specific versions to use. Right now we're installing the latest
  # # - We could possibly move the packages in to our own custom choco packages
  # # - Fix gcloud sdk install on windows-2022
  # # - Make it cross  platform
  # - pwsh: |
  #     # OS check. This is to simplify terragrunt install but also
  #     # because, for some reason, the linux agents were not
  #     # picking up our helper files in the repo
  #     if (-not $IsWindows)
  #     {
  #       throw "Terragrunt deployments must use a windows agent"
  #     }

  #     choco install terragrunt --confirm

  #     # Write-Host "Installing Google Cloud SDK"
  #     # (New-Object Net.WebClient).DownloadFile("https://dl.google.com/dl/cloudsdk/channels/rapid/GoogleCloudSDKInstaller.exe", "$env:Temp\GoogleCloudSDKInstaller.exe")
  #     # Start-Process `
  #     #   -FilePath $env:Temp\GoogleCloudSDKInstaller.exe `
  #     #   -ArgumentList @("/S", "/allusers") `
  #     #   -NoNewWindow `
  #     #   -Wait

  #     $ModuleInstalled = Get-Module `
  #       -Name GoogleCloud `
  #       -ListAvailable

  #     if (-not $ModuleInstalled)
  #     {
  #       Install-Module GoogleCloud -Force | Out-Null
  #     }
  #   displayName: Install prerequisites

  - ${{ if eq(parameters.apply, false) }}:
      - pwsh: |
          $tempPath = [System.IO.Path]::GetTempPath()
          $keyPath = Join-Path -Path $tempPath -ChildPath "key.json"

          [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('${{ parameters.gcpKeyData }}')) > $keyPath
          $env:GOOGLE_APPLICATION_CREDENTIALS = $keyPath

          gcloud auth activate-service-account --quiet --key-file $keyPath

          $(Pipeline.Workspace)/s/terragrunt/scripts/Deploy-GCPTerragruntConfig.ps1 -Service ${{ parameters.service }}
        displayName: Terragrunt plan

  - ${{ else }}:
      - pwsh: |
          $tempPath = [System.IO.Path]::GetTempPath()
          $keyPath = Join-Path -Path $tempPath -ChildPath "key.json"

          [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('${{ parameters.gcpKeyData }}')) > $keyPath
          $env:GOOGLE_APPLICATION_CREDENTIALS = $keyPath

          gcloud auth activate-service-account --quiet --key-file $keyPath

          $(Pipeline.Workspace)/s/terragrunt/scripts/Deploy-GCPTerragruntConfig.ps1 -Service ${{ parameters.service }} -Apply
        displayName: Terragrunt apply

  - pwsh: |
      Remove-Item -Path "$($env:TEMP)/key.json" -Force
    displayName: Cleanup
    condition: always()
