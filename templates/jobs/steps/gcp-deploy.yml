---
parameters:
  cloudType: ""
  service: ""
  gcpKeyData: ""
  apply: false
  timeout: 90

steps:
  - ${{ if eq(parameters.apply, false) }}:
      - pwsh: |
          $tempPath = [System.IO.Path]::GetTempPath()
          $keyPath = Join-Path -Path $tempPath -ChildPath "key.json"

          [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('${{ parameters.gcpKeyData }}')) > $keyPath
          $env:GOOGLE_APPLICATION_CREDENTIALS = $keyPath

          gcloud auth activate-service-account --quiet --key-file $keyPath

          $(Pipeline.Workspace)/s/terragrunt/scripts/Deploy-GCPTerragruntConfig.ps1 -Service ${{ parameters.service }}
        displayName: Terragrunt plan

  - ${{ else }}:
      - pwsh: |
          $tempPath = [System.IO.Path]::GetTempPath()
          $keyPath = Join-Path -Path $tempPath -ChildPath "key.json"

          [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('${{ parameters.gcpKeyData }}')) > $keyPath
          $env:GOOGLE_APPLICATION_CREDENTIALS = $keyPath

          gcloud auth activate-service-account --quiet --key-file $keyPath

          $(Pipeline.Workspace)/s/terragrunt/scripts/Deploy-GCPTerragruntConfig.ps1 -Service ${{ parameters.service }} -Apply
        displayName: Terragrunt apply

  - pwsh: |
      $tempPath = [System.IO.Path]::GetTempPath()
      $keyPath = Join-Path -Path $tempPath -ChildPath "key.json"
      Remove-Item -Path $keyPath -Force
    displayName: Cleanup
    condition: always()
