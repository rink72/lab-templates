---
parameters:
  cloudType: ""
  service: ""
  environment: Deploy
  configPath: ""
  terragruntArtifactName: terragrunt
  infrastructureArtifactName: infrastructure
  ansibleArtifactName: ansible
  ansiblePlaybook: ""
  gcpKeyData: ""
  deploy: false
  configure: false
  timeout: 90

jobs:
  # - ${{ if eq(parameters.cloudType, 'GCP') }}:
  #     - deployment: GCP
  #       displayName: Deploy GCP infrastructure
  #       environment: ${{ parameters.environment }}
  #       timeoutInMinutes: ${{ parameters.timeout }}
  #       pool:
  #         vmImage: ubuntu-20.04
  #       container: rink72/lab-ado-container-agent:latest
  #       workspace:
  #         clean: all
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - download: current
  #                 displayName: Download artifacts
  #               - template: steps/gcp-deploy.yml
  #                 parameters:
  #                   configPath: ${{ parameters.configPath }}
  #                   terragruntArtifactName: ${{ parameters.terragruntArtifactName }}
  #                   infrastructureArtifactName: ${{ parameters.infrastructureArtifactName }}
  #                   gcpKeyData: ${{ parameters.gcpKeyData }}
  #                   service: ${{ parameters.service }}
  #                   deploy: ${{ parameters.deploy }}

  - ${{ if eq(parameters.configure, true ) }}:
      - deployment: Ansible
        pool:
          vmImage: ubuntu-latest
        container: rink72/lab-ado-container-agent:latest
        displayName: Configure infrastructure
        environment: ${{ parameters.environment }}
        timeoutInMinutes: ${{ parameters.timeout }}
        # dependsOn:
        #   - GCP
        workspace:
          clean: all
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: ansible
                  displayName: Checkout ansible repo
                - ${{ if eq(parameters.cloudType, 'GCP') }}:
                    - template: steps/gcp-ansible.yml
                      parameters:
                        ansiblePlaybook: ${{ parameters.ansiblePlaybook }}
                        gcpKeyData: ${{ parameters.gcpKeyData }}
                        service: ${{ parameters.service }}
                        apply: ${{ parameters.apply }}
                        ansibleArtifactName: ${{ parameters.ansibleArtifactName }}
